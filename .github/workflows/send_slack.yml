name: Send Error to Slack
on:
  workflow_run:
    workflows: [Publish Package to Npm, PR Test]
    types:
      - completed
jobs:
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - uses: actions/checkout@v3
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump GitHub wf
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event.workflow_run) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump GitHub pr number
        env:
          GITHUB_CONTEXT: ${{ github.event.workflow_run.pull_requests[0].number }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump GitHub event
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Get error log
        if: always()
        id: error_log_1
        run: |
          ERROR_LOG="$(gh run view ${{ github.event.workflow_run.id }} --log-failed | grep error | sed -r 's/\x1B\[(([0-9]+)(;[0-9]+)*)?[m,K,H,f,J]//g' | sed -z 's/\n/\\n/g' | sed 's/\t/    /g')"
          echo "ERROR_LOG_1=\'$ERROR_LOG\'" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get error log
        if: always()
        id: error_log_2
        run: |
          ERROR_LOG="$(gh run view ${{ github.event.workflow_run.id }} --log-failed | grep error | sed -r 's/\x1B\[(([0-9]+)(;[0-9]+)*)?[m,K,H,f,J]//g' | sed -z 's/\n/\\n/g' | sed 's/\t/    /g')"
          echo "ERROR_LOG_2=$ERROR_LOG" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get error log
        if: always()
        id: error_log_3
        run: |
          ERROR_LOG="$(gh run view ${{ github.event.workflow_run.id }} --log-failed | grep error | sed -r 's/\x1B\[(([0-9]+)(;[0-9]+)*)?[m,K,H,f,J]//g' | sed -z 's/\n/\\n/g' | sed 's/\t/    /g')"
          echo "ERROR_LOG_3=\"$ERROR_LOG\"" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get error log
        if: always()
        run: |
          ERROR_LOG="$(gh run view ${{ github.event.workflow_run.id }} --log-failed | grep error | sed -r 's/\x1B\[(([0-9]+)(;[0-9]+)*)?[m,K,H,f,J]//g' | sed -z 's/\n/\\n/g')"
          echo "ERROR_LOG_1=\'$ERROR_LOG\'" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get error log
        if: always()
        run: |
          ERROR_LOG="$(gh run view ${{ github.event.workflow_run.id }} --log-failed | grep error | sed -r 's/\x1B\[(([0-9]+)(;[0-9]+)*)?[m,K,H,f,J]//g' | sed -z 's/\n/\\n/g')"
          echo "ERROR_LOG_2=$ERROR_LOG" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get error log
        if: always()
        run: |
          ERROR_LOG="$(gh run view ${{ github.event.workflow_run.id }} --log-failed | grep error | sed -r 's/\x1B\[(([0-9]+)(;[0-9]+)*)?[m,K,H,f,J]//g' | sed -z 's/\n/\\n/g')"
          echo "ERROR_LOG_3=\"$ERROR_LOG\"" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: test
        if: always()
        run: echo "ERROR_LOG=test (14.x)     Test Fail       2022-11-19T13:47:56.4464534Z ##[group]Run exit 1\ntest (14.x)   Test Fail       2022-11-19T13:47:56.4464778Z exit 1\ntest (14.x)        Test Fail       2022-11-19T13:47:56.4517027Z shell: /usr/bin/bash -e {0}\ntest (14.x)        Test Fail       2022-11-19T13:47:56.4517271Z ##[endgroup]\ntest (14.x)  Test Fail       2022-11-19T13:47:56.4612214Z ##[error]Process completed with exit code 1.\ntest (16.x)       Test Fail       2022-11-19T13:47:53.5128351Z ##[group]Run exit 1\ntest (16.x)   Test Fail       2022-11-19T13:47:53.5128653Z exit 1\ntest (16.x)    Test Fail        2022-11-19T13:47:53.5187966Z shell: /usr/bin/bash -e {0}\ntest (16.x)   Test Fail       2022-11-19T13:47:53.5188256Z ##[endgroup]\ntest (16.x)  Test Fail       2022-11-19T13:47:53.5291034Z ##[error]Process completed with exit code 1.\n" >> $GITHUB_OUTPUT
      - name: print
        if: always()
        run: |
          echo "*Error log*\n```${{ steps.error_log_1.outputs.ERROR_LOG_1 }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
      - name: print
        if: always()
        run: |
          echo "*Error log*\n```${{ steps.error_log_2.outputs.ERROR_LOG_2 }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
      - name: print
        if: always()
        run: |
          echo "*Error log*\n```${{ steps.error_log_3.outputs.ERROR_LOG_3 }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
      - name: Notify error to slack
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PIPELINE FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Error log*\n```${{ steps.error_log_1.outputs.ERROR_LOG_1 }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
                  }
                }
              ]
            }
        env:
          PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
          SLACK_WEBHOOK_URL: ${{ secrets.TEST_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Notify error to slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PIPELINE FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Error log*\n```${{ toJson(steps.error_log_1.outputs.ERROR_LOG_1) }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
                  }
                }
              ]
            }
        env:
          PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
          SLACK_WEBHOOK_URL: ${{ secrets.TEST_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Notify error to slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PIPELINE FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Error log*\n```${{ steps.error_log_2.outputs.ERROR_LOG_2 }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
                  }
                }
              ]
            }
        env:
          PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
          SLACK_WEBHOOK_URL: ${{ secrets.TEST_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Notify error to slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PIPELINE FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Error log*\n```${{ steps.error_log_3.outputs.ERROR_LOG_3 }}```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
                  }
                }
              ]
            }
        env:
          PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
          SLACK_WEBHOOK_URL: ${{ secrets.TEST_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Notify error to slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PIPELINE FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Error log*\n```test (14.x)     Test Fail       2022-11-19T13:47:56.4464534Z ##[group]Run exit 1\ntest (14.x)   Test Fail       2022-11-19T13:47:56.4464778Z exit 1\ntest (14.x)        Test Fail       2022-11-19T13:47:56.4517027Z shell: /usr/bin/bash -e {0}\ntest (14.x)        Test Fail       2022-11-19T13:47:56.4517271Z ##[endgroup]\ntest (14.x)  Test Fail       2022-11-19T13:47:56.4612214Z ##[error]Process completed with exit code 1.\ntest (16.x)       Test Fail       2022-11-19T13:47:53.5128351Z ##[group]Run exit 1\ntest (16.x)   Test Fail       2022-11-19T13:47:53.5128653Z exit 1\ntest (16.x)    Test Fail        2022-11-19T13:47:53.5187966Z shell: /usr/bin/bash -e {0}\ntest (16.x)   Test Fail       2022-11-19T13:47:53.5188256Z ##[endgroup]\ntest (16.x)  Test Fail       2022-11-19T13:47:53.5291034Z ##[error]Process completed with exit code 1.\n```\nCheck full logs in ${{ github.event.workflow_run.html_url }}"
                  }
                }
              ]
            }
        env:
          PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
          SLACK_WEBHOOK_URL: ${{ secrets.TEST_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Notify error to slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rotating_light:PIPELINE FAILED",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.workflow.name }} failed for <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}|PR#${{ env.PR_NUMBER }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.error_log_2.outputs.ERROR_LOG_2 }}"
                  }
                }
              ]
            }
        env:
          PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
          SLACK_WEBHOOK_URL: ${{ secrets.TEST_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
